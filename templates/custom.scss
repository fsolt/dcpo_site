/*-- scss:defaults --*/
// Colors
$sidebar-color: #170C3A;
$sidebar-light: #afafaf;
$darker-grey: #808080;

$meta-color: #170C3A;
$meta-light: #dad8f2;

$text-color: #000000;
$heading-color: #000000;
$blockquote-color: #A52C60;
$blockquote-light: #FFB7CD;
$inline-code: #000000;
$inline-code-bg: #e3e3e3;

$link-color: #2849A0;
$link-hover-color: #C8B663;

$bg-color: #FFFFFF;
$fg-color: #212121;
$alt-bg-color: #E0E0E0;
$alt-fg-color: #000;

$alert-bg-level: -10 !default;
$alert-border-level: -9 !default;
$alert-color-level: 6 !default;
$theme-color-interval: 8% !default;


/*-- scss:rules --*/
.project-list {
    ul {
        list-style: none;
        padding: 0;
        margin: 0 0 2em;
        list-style-type: none;
        li.project {
            margin-bottom: 2.5em;
            list-style-type: none;

            p {
                margin: 0;
            }
        }
    }

    li {
      list-style-type: none;
    }

    .project-content {
        .status {
            font-size: 1rem;
            font-weight: 250;
            padding: 0.2em;
            margin-right: 0.5em;
        }
    }

    ul.project-links {
        margin-bottom: 0;
    }

    .project-details {
        margin-bottom: 2rem;
        background-color: lighten($link-color, 45%);
        font-size: 0.9rem;
        border: 1 solid transparent;
        border-radius: 0.25rem;

        @media (max-width: 48em) {
            font-size: 0.8rem;
        }

        .project-link {
            display: inline-block;
            white-space: nowrap;
            padding: 0.5em 0.5em 0.5em 1em;
        }

        .details {
            background-color: $link-color;
            padding-right: 1.5em;
            border-right: 1 solid transparent;
            border-radius: 0.25rem;

            a {
                color: #FFFFFF;
            }
        }
    }

    h2 {
        margin-top: 0;
        padding-bottom: 0.1em;
        margin-bottom: 0.3em;
        font-size: 2rem;
        border-bottom: #000000 solid 2px;
    }
}

.research-page {
    h1 {
        font-size: 2.6rem;
        line-height: 1.2;
        margin-bottom: 1em;
    }

    h2 {
        font-size: 2.1rem;
    }

    h3 {
        font-size: 1.7rem;
    }

    li {
      list-style-type: none;
    }

    .project-details {
        background-color: lighten($link-color, 45%);
        border: 1 solid transparent;
        border-radius: 0.25rem;
        padding: 1em;
        font-size: 1.1rem;
        line-height: 1.3;

        ul.project-links {
            padding: 0;
            margin: 0.75em 0 0;
        }

        p {
            margin: 0;
        }

        @media (max-width: 48em) {
            font-size: 0.8rem;
        }

        .project-link {
            display: inline-block;
            white-space: nowrap;
            padding: 0.5em 0.5em 0em 0em;
            font-size: 1.1rem;
        }

        .details {
            background-color: $link-color;
            padding-right: 1.5em;
            border-right: 1 solid transparent;
            border-radius: 0.25rem;

            a {
                color: #FFFFFF;
            }
        }
    }
}

.alert {
    position: relative;
    padding: 0.75rem 1.25rem 0.75rem 3rem;
    margin-bottom: 1rem;
    border: 1 solid transparent;
    border-radius: 0.25rem;
}

.alert:before {
    position: absolute;
    font-family: FontAwesome;
    left: 1rem;
}

.alert-heading {
    // Specified to prevent conflicts of changing $headings-color
    color: inherit;
}

/*-- scss:mixins --*/
@mixin alert-variant($background, $border, $color) {
    color: $color;
    background: $background;
    border-color: $border;

    hr {
        border-top-color: darken($border, 5%);
    }

    .alert-link {
        color: darken($color, 10%);
    }
}

/*-- scss:functions --*/
@function theme-color($key: "primary") {
    @return map-get($theme-colors, $key);
}

@function theme-color-level($color-name: "primary", $level: 0) {
    $color: theme-color($color-name);
    $color-base: if($level > 0, #000000, #FFFFFF);
    $level: abs($level);

    @return mix($color-base, $color, $level * $theme-color-interval);
}

/*-- scss:rules --*/
$theme-colors: () !default;
$theme-colors: map-merge(
  (
    "primary": #A52C60,
    "secondary": #495057,
    "success": #118230,
    "info": #3093CF,
    "warning": #EE6A24,
    "danger": #CF4446,
    "light": #ced4da,
    "dark": #000000
  ),
  $theme-colors
);

$alert-icons: () !default;
$alert-icons: map-merge(
  (
    "primary": "\f1ce",  // https://fontawesome.com/icons/circle-notch
    "secondary": "\f1ce",  // https://fontawesome.com/icons/circle-notch
    "success": "\f058",  // https://fontawesome.com/icons/check-circle
    "info": "\f05a",  // https://fontawesome.com/icons/info-circle
    "warning": "\f071",  // https://fontawesome.com/icons/exclamation-triangle
    "danger": "\f05e",  // https://fontawesome.com/icons/ban
    "light": "\f1ce",  // https://fontawesome.com/icons/circle-notch
    "dark": "\f1ce"  // https://fontawesome.com/icons/circle-notch
  ),
  $alert-icons
);

@each $color, $value in $theme-colors {
    .alert-#{$color} {
        @include alert-variant(theme-color-level($color, $alert-bg-level), theme-color-level($color, $alert-border-level), theme-color-level($color, $alert-color-level));
    }
}

@each $color, $value in $theme-colors {
    .btn-#{$color} {
        @include alert-variant(theme-color-level($color, $alert-bg-level), theme-color-level($color, $alert-border-level), theme-color-level($color, $alert-color-level));
    }
}

@each $alert, $icon in $alert-icons {
    .alert-#{$alert}:before {
        content: $icon;
    }
}

.btn-custom {
  background-color: $link-color;
  color: white;
  border-radius: 0.25rem;
}

.btn-custom:hover {
  background-color: lighten($link-color, 45%);
  color: $link-color;
}
